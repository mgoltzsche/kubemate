definitions:
  com.github.mgoltzsche.kubemate.pkg.apis.apps.v1alpha1.App:
    description: App is the Schema for the apps API
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation
          of an object. Servers should convert recognized schemas to the latest internal
          value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      kind:
        description: 'Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client submits
          requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta'
        default: {}
      spec:
        $ref: '#/definitions/com.github.mgoltzsche.kubemate.pkg.apis.apps.v1alpha1.AppSpec'
        default: {}
      status:
        $ref: '#/definitions/com.github.mgoltzsche.kubemate.pkg.apis.apps.v1alpha1.AppStatus'
        default: {}
    required:
    - spec
    type: object
  com.github.mgoltzsche.kubemate.pkg.apis.apps.v1alpha1.AppSpec:
    description: AppSpec defines the desired state of the App.
    properties:
      enabled:
        type: boolean
      kustomization:
        $ref: '#/definitions/com.github.mgoltzsche.kubemate.pkg.apis.apps.v1alpha1.KustomizationSpec'
    type: object
  com.github.mgoltzsche.kubemate.pkg.apis.apps.v1alpha1.AppStatus:
    description: AppStatus defines the observed state of the App.
    properties:
      lastAppliedRevision:
        type: string
      lastAttemptedRevision:
        type: string
      message:
        type: string
      observedGeneration:
        format: int64
        type: integer
      state:
        description: |-
          Possible enum values:
           - `"Deinstalling"`
           - `"Error"`
           - `"Installed"`
           - `"Installing"`
           - `"NotInstalled"`
           - `"Upgrading"`
        enum:
        - Deinstalling
        - Error
        - Installed
        - Installing
        - NotInstalled
        - Upgrading
        type: string
      targetNamespace:
        type: string
    type: object
  com.github.mgoltzsche.kubemate.pkg.apis.apps.v1alpha1.CrossNamespaceSourceReference:
    description: CrossNamespaceSourceReference contains enough information to let
      you locate the typed Kubernetes resource object at cluster level.
    properties:
      apiVersion:
        description: API version of the referent.
        type: string
      kind:
        default: ""
        description: Kind of the referent.
        type: string
      name:
        default: ""
        description: Name of the referent.
        type: string
      namespace:
        description: Namespace of the referent, defaults to the namespace of the Kubernetes
          resource object that contains the reference.
        type: string
    required:
    - kind
    - name
    type: object
  com.github.mgoltzsche.kubemate.pkg.apis.apps.v1alpha1.KustomizationSpec:
    description: KustomizationSpec specifies the kustomization that should be installed.
    properties:
      path:
        description: Path points to the kustomization directory within the sourceRef.
        type: string
      sourceRef:
        $ref: '#/definitions/com.github.mgoltzsche.kubemate.pkg.apis.apps.v1alpha1.CrossNamespaceSourceReference'
        default: {}
        description: Reference of the source where the kustomization file is.
      targetNamespace:
        description: TargetNamespace specifies the Kubernetes Namespace the kustomization
          should be installed to.
        type: string
    required:
    - sourceRef
    type: object
  com.github.mgoltzsche.kubemate.pkg.apis.devices.v1.Device:
    description: Device is the Schema for the devices API
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation
          of an object. Servers should convert recognized schemas to the latest internal
          value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      kind:
        description: 'Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client submits
          requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta'
        default: {}
      spec:
        $ref: '#/definitions/com.github.mgoltzsche.kubemate.pkg.apis.devices.v1.DeviceSpec'
        default: {}
      status:
        $ref: '#/definitions/com.github.mgoltzsche.kubemate.pkg.apis.devices.v1.DeviceStatus'
        default: {}
    required:
    - metadata
    - spec
    - status
    type: object
  com.github.mgoltzsche.kubemate.pkg.apis.devices.v1.DeviceSpec:
    description: DeviceSpec defines the desired state of the Device.
    properties:
      mode:
        default: ""
        description: |-
          Possible enum values:
           - `"agent"`
           - `"server"`
        enum:
        - agent
        - server
        type: string
      server:
        type: string
      wifi:
        $ref: '#/definitions/com.github.mgoltzsche.kubemate.pkg.apis.devices.v1.WifiConfig'
        default: {}
    required:
    - mode
    - wifi
    type: object
  com.github.mgoltzsche.kubemate.pkg.apis.devices.v1.DeviceStatus:
    description: DeviceStatus defines the observed state of Cache
    properties:
      address:
        type: string
      current:
        default: false
        type: boolean
      generation:
        format: int64
        type: integer
      joinAddress:
        type: string
      message:
        type: string
      state:
        description: |-
          Possible enum values:
           - `"error"`
           - `"exited"`
           - `"running"`
           - `"starting"`
           - `"terminating"`
           - `"unknown"`
        enum:
        - error
        - exited
        - running
        - starting
        - terminating
        - unknown
        type: string
    required:
    - current
    type: object
  com.github.mgoltzsche.kubemate.pkg.apis.devices.v1.DeviceToken:
    description: DeviceToken is the Schema for the devices API
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation
          of an object. Servers should convert recognized schemas to the latest internal
          value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      data:
        $ref: '#/definitions/com.github.mgoltzsche.kubemate.pkg.apis.devices.v1.DeviceTokenData'
        default: {}
      kind:
        description: 'Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client submits
          requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta'
        default: {}
    required:
    - metadata
    - data
    type: object
  com.github.mgoltzsche.kubemate.pkg.apis.devices.v1.DeviceTokenData:
    description: DeviceTokenData defines the desired state of Cache
    properties:
      token:
        default: ""
        type: string
    required:
    - token
    type: object
  com.github.mgoltzsche.kubemate.pkg.apis.devices.v1.WifiAccessPointConf:
    description: WifiAccessPointConf defines the wifi access point configuration.
    properties:
      SSID:
        default: ""
        type: string
    required:
    - SSID
    type: object
  com.github.mgoltzsche.kubemate.pkg.apis.devices.v1.WifiClientConf:
    description: WifiClientConf defines the wifi client configuration.
    properties:
      SSID:
        default: ""
        type: string
    required:
    - SSID
    type: object
  com.github.mgoltzsche.kubemate.pkg.apis.devices.v1.WifiConfig:
    description: WifiConfig defines the wifi configuration for the device.
    properties:
      accessPoint:
        $ref: '#/definitions/com.github.mgoltzsche.kubemate.pkg.apis.devices.v1.WifiAccessPointConf'
        default: {}
      client:
        $ref: '#/definitions/com.github.mgoltzsche.kubemate.pkg.apis.devices.v1.WifiClientConf'
        default: {}
      countryCode:
        type: string
      mode:
        description: |-
          Possible enum values:
           - `"accesspoint"`
           - `"disabled"`
           - `"station"`
        enum:
        - accesspoint
        - disabled
        - station
        type: string
    required:
    - client
    - accessPoint
    type: object
  com.github.mgoltzsche.kubemate.pkg.apis.devices.v1.WifiNetwork:
    description: WifiNetwork is the Schema for the devices API
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation
          of an object. Servers should convert recognized schemas to the latest internal
          value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      data:
        $ref: '#/definitions/com.github.mgoltzsche.kubemate.pkg.apis.devices.v1.WifiNetworkData'
        default: {}
      kind:
        description: 'Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client submits
          requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta'
        default: {}
    required:
    - metadata
    - data
    type: object
  com.github.mgoltzsche.kubemate.pkg.apis.devices.v1.WifiNetworkData:
    description: WifiNetworkData defines the desired state of Cache
    properties:
      ssid:
        default: ""
        type: string
    required:
    - ssid
    type: object
  com.github.mgoltzsche.kubemate.pkg.apis.devices.v1.WifiPassword:
    description: WifiPassword is the Schema for the wifi key API
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation
          of an object. Servers should convert recognized schemas to the latest internal
          value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      data:
        $ref: '#/definitions/com.github.mgoltzsche.kubemate.pkg.apis.devices.v1.WifiPasswordData'
        default: {}
      kind:
        description: 'Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client submits
          requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta'
        default: {}
    required:
    - metadata
    - data
    type: object
  com.github.mgoltzsche.kubemate.pkg.apis.devices.v1.WifiPasswordData:
    description: WifiPasswordData defines the desired state of Cache
    properties:
      token:
        default: ""
        type: string
    required:
    - token
    type: object
  io.k8s.api.core.v1.LoadBalancerIngress:
    description: 'LoadBalancerIngress represents the status of a load-balancer ingress
      point: traffic intended for the service should be sent to an ingress point.'
    properties:
      hostname:
        description: Hostname is set for load-balancer ingress points that are DNS
          based (typically AWS load-balancers)
        type: string
      ip:
        description: IP is set for load-balancer ingress points that are IP based
          (typically GCE or OpenStack load-balancers)
        type: string
      ports:
        description: Ports is a list of records of service ports If used, every port
          defined in the service should have an entry in it
        items:
          $ref: '#/definitions/io.k8s.api.core.v1.PortStatus'
          default: {}
        type: array
        x-kubernetes-list-type: atomic
    type: object
  io.k8s.api.core.v1.LoadBalancerStatus:
    description: LoadBalancerStatus represents the status of a load-balancer.
    properties:
      ingress:
        description: Ingress is a list containing ingress points for the load-balancer.
          Traffic intended for the service should be sent to these ingress points.
        items:
          $ref: '#/definitions/io.k8s.api.core.v1.LoadBalancerIngress'
          default: {}
        type: array
    type: object
  io.k8s.api.core.v1.PortStatus:
    properties:
      error:
        description: |-
          Error is to record the problem with the service port The format of the error shall comply with the following rules: - built-in error values shall be specified in this file and those shall use
            CamelCase names
          - cloud provider specific error values must have names that comply with the
            format foo.example.com/CamelCase.
        type: string
      port:
        default: 0
        description: Port is the port number of the service port of which status is
          recorded here
        format: int32
        type: integer
      protocol:
        default: ""
        description: |-
          Protocol is the protocol of the service port of which status is recorded here The supported values are: "TCP", "UDP", "SCTP"

          Possible enum values:
           - `"SCTP"` is the SCTP protocol.
           - `"TCP"` is the TCP protocol.
           - `"UDP"` is the UDP protocol.
        enum:
        - SCTP
        - TCP
        - UDP
        type: string
    required:
    - port
    - protocol
    type: object
  io.k8s.api.core.v1.TypedLocalObjectReference:
    description: TypedLocalObjectReference contains enough information to let you
      locate the typed referenced object inside the same namespace.
    properties:
      apiGroup:
        description: APIGroup is the group for the resource being referenced. If APIGroup
          is not specified, the specified Kind must be in the core API group. For
          any other third-party types, APIGroup is required.
        type: string
      kind:
        default: ""
        description: Kind is the type of resource being referenced
        type: string
      name:
        default: ""
        description: Name is the name of resource being referenced
        type: string
    required:
    - kind
    - name
    type: object
    x-kubernetes-map-type: atomic
  io.k8s.api.networking.v1.HTTPIngressPath:
    description: HTTPIngressPath associates a path with a backend. Incoming urls matching
      the path are forwarded to the backend.
    properties:
      backend:
        $ref: '#/definitions/io.k8s.api.networking.v1.IngressBackend'
        default: {}
        description: Backend defines the referenced service endpoint to which the
          traffic will be forwarded to.
      path:
        description: Path is matched against the path of an incoming request. Currently
          it can contain characters disallowed from the conventional "path" part of
          a URL as defined by RFC 3986. Paths must begin with a '/' and must be present
          when using PathType with value "Exact" or "Prefix".
        type: string
      pathType:
        description: |-
          PathType determines the interpretation of the Path matching. PathType can be one of the following values: * Exact: Matches the URL path exactly. * Prefix: Matches based on a URL path prefix split by '/'. Matching is
            done on a path element by element basis. A path element refers is the
            list of labels in the path split by the '/' separator. A request is a
            match for path p if every p is an element-wise prefix of p of the
            request path. Note that if the last element of the path is a substring
            of the last element in request path, it is not a match (e.g. /foo/bar
            matches /foo/bar/baz, but does not match /foo/barbaz).
          * ImplementationSpecific: Interpretation of the Path matching is up to
            the IngressClass. Implementations can treat this as a separate PathType
            or treat it identically to Prefix or Exact path types.
          Implementations are required to support all path types.
        type: string
    required:
    - pathType
    - backend
    type: object
  io.k8s.api.networking.v1.HTTPIngressRuleValue:
    description: 'HTTPIngressRuleValue is a list of http selectors pointing to backends.
      In the example: http://<host>/<path>?<searchpart> -> backend where where parts
      of the url correspond to RFC 3986, this resource will be used to match against
      everything after the last ''/'' and before the first ''?'' or ''#''.'
    properties:
      paths:
        description: A collection of paths that map requests to backends.
        items:
          $ref: '#/definitions/io.k8s.api.networking.v1.HTTPIngressPath'
          default: {}
        type: array
        x-kubernetes-list-type: atomic
    required:
    - paths
    type: object
  io.k8s.api.networking.v1.Ingress:
    description: Ingress is a collection of rules that allow inbound connections to
      reach the endpoints defined by a backend. An Ingress can be configured to give
      services externally-reachable urls, load balance traffic, terminate SSL, offer
      name based virtual hosting etc.
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation
          of an object. Servers should convert recognized schemas to the latest internal
          value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      kind:
        description: 'Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client submits
          requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta'
        default: {}
        description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'
      spec:
        $ref: '#/definitions/io.k8s.api.networking.v1.IngressSpec'
        default: {}
        description: 'Spec is the desired state of the Ingress. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
      status:
        $ref: '#/definitions/io.k8s.api.networking.v1.IngressStatus'
        default: {}
        description: 'Status is the current state of the Ingress. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
    type: object
  io.k8s.api.networking.v1.IngressBackend:
    description: IngressBackend describes all endpoints for a given service and port.
    properties:
      resource:
        $ref: '#/definitions/io.k8s.api.core.v1.TypedLocalObjectReference'
        description: Resource is an ObjectRef to another Kubernetes resource in the
          namespace of the Ingress object. If resource is specified, a service.Name
          and service.Port must not be specified. This is a mutually exclusive setting
          with "Service".
      service:
        $ref: '#/definitions/io.k8s.api.networking.v1.IngressServiceBackend'
        description: Service references a Service as a Backend. This is a mutually
          exclusive setting with "Resource".
    type: object
  io.k8s.api.networking.v1.IngressRule:
    description: IngressRule represents the rules mapping the paths under a specified
      host to the related backend services. Incoming requests are first evaluated
      for a host match, then routed to the backend associated with the matching IngressRuleValue.
    properties:
      host:
        description: "Host is the fully qualified domain name of a network host, as
          defined by RFC 3986. Note the following deviations from the \"host\" part
          of the URI as defined in RFC 3986: 1. IPs are not allowed. Currently an
          IngressRuleValue can only apply to\n   the IP in the Spec of the parent
          Ingress.\n2. The `:` delimiter is not respected because ports are not allowed.\n\t
          \ Currently the port of an Ingress is implicitly :80 for http and\n\t  :443
          for https.\nBoth these may change in the future. Incoming requests are matched
          against the host before the IngressRuleValue. If the host is unspecified,
          the Ingress routes all traffic based on the specified IngressRuleValue.\n\nHost
          can be \"precise\" which is a domain name without the terminating dot of
          a network host (e.g. \"foo.bar.com\") or \"wildcard\", which is a domain
          name prefixed with a single wildcard label (e.g. \"*.foo.com\"). The wildcard
          character '*' must appear by itself as the first DNS label and matches only
          a single label. You cannot have a wildcard label by itself (e.g. Host ==
          \"*\"). Requests will be matched against the Host field in the following
          way: 1. If Host is precise, the request matches this rule if the http host
          header is equal to Host. 2. If Host is a wildcard, then the request matches
          this rule if the http host header is to equal to the suffix (removing the
          first label) of the wildcard rule."
        type: string
      http:
        $ref: '#/definitions/io.k8s.api.networking.v1.HTTPIngressRuleValue'
    type: object
  io.k8s.api.networking.v1.IngressServiceBackend:
    description: IngressServiceBackend references a Kubernetes Service as a Backend.
    properties:
      name:
        default: ""
        description: Name is the referenced service. The service must exist in the
          same namespace as the Ingress object.
        type: string
      port:
        $ref: '#/definitions/io.k8s.api.networking.v1.ServiceBackendPort'
        default: {}
        description: Port of the referenced service. A port name or port number is
          required for a IngressServiceBackend.
    required:
    - name
    type: object
  io.k8s.api.networking.v1.IngressSpec:
    description: IngressSpec describes the Ingress the user wishes to exist.
    properties:
      defaultBackend:
        $ref: '#/definitions/io.k8s.api.networking.v1.IngressBackend'
        description: DefaultBackend is the backend that should handle requests that
          don't match any rule. If Rules are not specified, DefaultBackend must be
          specified. If DefaultBackend is not set, the handling of requests that do
          not match any of the rules will be up to the Ingress controller.
      ingressClassName:
        description: IngressClassName is the name of the IngressClass cluster resource.
          The associated IngressClass defines which controller will implement the
          resource. This replaces the deprecated `kubernetes.io/ingress.class` annotation.
          For backwards compatibility, when that annotation is set, it must be given
          precedence over this field. The controller may emit a warning if the field
          and annotation have different values. Implementations of this API should
          ignore Ingresses without a class specified. An IngressClass resource may
          be marked as default, which can be used to set a default value for this
          field. For more information, refer to the IngressClass documentation.
        type: string
      rules:
        description: A list of host rules used to configure the Ingress. If unspecified,
          or no rule matches, all traffic is sent to the default backend.
        items:
          $ref: '#/definitions/io.k8s.api.networking.v1.IngressRule'
          default: {}
        type: array
        x-kubernetes-list-type: atomic
      tls:
        description: TLS configuration. Currently the Ingress only supports a single
          TLS port, 443. If multiple members of this list specify different hosts,
          they will be multiplexed on the same port according to the hostname specified
          through the SNI TLS extension, if the ingress controller fulfilling the
          ingress supports SNI.
        items:
          $ref: '#/definitions/io.k8s.api.networking.v1.IngressTLS'
          default: {}
        type: array
        x-kubernetes-list-type: atomic
    type: object
  io.k8s.api.networking.v1.IngressStatus:
    description: IngressStatus describe the current state of the Ingress.
    properties:
      loadBalancer:
        $ref: '#/definitions/io.k8s.api.core.v1.LoadBalancerStatus'
        default: {}
        description: LoadBalancer contains the current status of the load-balancer.
    type: object
  io.k8s.api.networking.v1.IngressTLS:
    description: IngressTLS describes the transport layer security associated with
      an Ingress.
    properties:
      hosts:
        description: Hosts are a list of hosts included in the TLS certificate. The
          values in this list must match the name/s used in the tlsSecret. Defaults
          to the wildcard host setting for the loadbalancer controller fulfilling
          this Ingress, if left unspecified.
        items:
          default: ""
          type: string
        type: array
        x-kubernetes-list-type: atomic
      secretName:
        description: SecretName is the name of the secret used to terminate TLS traffic
          on port 443. Field is left optional to allow TLS routing based on SNI hostname
          alone. If the SNI host in a listener conflicts with the "Host" header field
          used by an IngressRule, the SNI host is used for termination and value of
          the Host header is used for routing.
        type: string
    type: object
  io.k8s.api.networking.v1.ServiceBackendPort:
    description: ServiceBackendPort is the service port being referenced.
    properties:
      name:
        description: Name is the name of the port on the Service. This is a mutually
          exclusive setting with "Number".
        type: string
      number:
        description: Number is the numerical port number (e.g. 80) on the Service.
          This is a mutually exclusive setting with "Name".
        format: int32
        type: integer
    type: object
  io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceColumnDefinition:
    description: CustomResourceColumnDefinition specifies a column for server side
      printing.
    properties:
      description:
        description: description is a human readable description of this column.
        type: string
      format:
        description: format is an optional OpenAPI type definition for this column.
          The 'name' format is applied to the primary identifier column to assist
          in clients identifying column is the resource name. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types
          for details.
        type: string
      jsonPath:
        default: ""
        description: jsonPath is a simple JSON path (i.e. with array notation) which
          is evaluated against each custom resource to produce the value for this
          column.
        type: string
      name:
        default: ""
        description: name is a human readable name for the column.
        type: string
      priority:
        description: priority is an integer defining the relative importance of this
          column compared to others. Lower numbers are considered higher priority.
          Columns that may be omitted in limited space scenarios should be given a
          priority greater than 0.
        format: int32
        type: integer
      type:
        default: ""
        description: type is an OpenAPI type definition for this column. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types
          for details.
        type: string
    required:
    - name
    - type
    - jsonPath
    type: object
  io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceConversion:
    description: CustomResourceConversion describes how to convert different versions
      of a CR.
    properties:
      strategy:
        default: ""
        description: |-
          strategy specifies how custom resources are converted between versions. Allowed values are: - `None`: The converter only change the apiVersion and would not touch any other field in the custom resource. - `Webhook`: API Server will call to an external webhook to do the conversion. Additional information
            is needed for this option. This requires spec.preserveUnknownFields to be false, and spec.conversion.webhook to be set.
        type: string
      webhook:
        $ref: '#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.WebhookConversion'
        description: webhook describes how to call the conversion webhook. Required
          when `strategy` is set to `Webhook`.
    required:
    - strategy
    type: object
  io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinition:
    description: CustomResourceDefinition represents a resource that should be exposed
      on the API server.  Its name MUST be in the format <.spec.name>.<.spec.group>.
    properties:
      apiVersion:
        description: 'APIVersion defines the versioned schema of this representation
          of an object. Servers should convert recognized schemas to the latest internal
          value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        type: string
      kind:
        description: 'Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client submits
          requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      metadata:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta'
        default: {}
        description: 'Standard object''s metadata More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'
      spec:
        $ref: '#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionSpec'
        default: {}
        description: spec describes how the user wants the resources to appear
      status:
        $ref: '#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionStatus'
        default: {}
        description: status indicates the actual state of the CustomResourceDefinition
    required:
    - spec
    type: object
  io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionCondition:
    description: CustomResourceDefinitionCondition contains details for the current
      condition of this pod.
    properties:
      lastTransitionTime:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time'
        default: {}
        description: lastTransitionTime last time the condition transitioned from
          one status to another.
      message:
        description: message is a human-readable message indicating details about
          last transition.
        type: string
      reason:
        description: reason is a unique, one-word, CamelCase reason for the condition's
          last transition.
        type: string
      status:
        default: ""
        description: status is the status of the condition. Can be True, False, Unknown.
        type: string
      type:
        default: ""
        description: type is the type of the condition. Types include Established,
          NamesAccepted and Terminating.
        type: string
    required:
    - type
    - status
    type: object
  io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionNames:
    description: CustomResourceDefinitionNames indicates the names to serve this CustomResourceDefinition
    properties:
      categories:
        description: categories is a list of grouped resources this custom resource
          belongs to (e.g. 'all'). This is published in API discovery documents, and
          used by clients to support invocations like `kubectl get all`.
        items:
          default: ""
          type: string
        type: array
      kind:
        default: ""
        description: kind is the serialized kind of the resource. It is normally CamelCase
          and singular. Custom resource instances will use this value as the `kind`
          attribute in API calls.
        type: string
      listKind:
        description: listKind is the serialized kind of the list for this resource.
          Defaults to "`kind`List".
        type: string
      plural:
        default: ""
        description: plural is the plural name of the resource to serve. The custom
          resources are served under `/apis/<group>/<version>/.../<plural>`. Must
          match the name of the CustomResourceDefinition (in the form `<names.plural>.<group>`).
          Must be all lowercase.
        type: string
      shortNames:
        description: shortNames are short names for the resource, exposed in API discovery
          documents, and used by clients to support invocations like `kubectl get
          <shortname>`. It must be all lowercase.
        items:
          default: ""
          type: string
        type: array
      singular:
        description: singular is the singular name of the resource. It must be all
          lowercase. Defaults to lowercased `kind`.
        type: string
    required:
    - plural
    - kind
    type: object
  io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionSpec:
    description: CustomResourceDefinitionSpec describes how a user wants their resource
      to appear
    properties:
      conversion:
        $ref: '#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceConversion'
        description: conversion defines conversion settings for the CRD.
      group:
        default: ""
        description: group is the API group of the defined custom resource. The custom
          resources are served under `/apis/<group>/...`. Must match the name of the
          CustomResourceDefinition (in the form `<names.plural>.<group>`).
        type: string
      names:
        $ref: '#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionNames'
        default: {}
        description: names specify the resource and kind names for the custom resource.
      preserveUnknownFields:
        description: preserveUnknownFields indicates that object fields which are
          not specified in the OpenAPI schema should be preserved when persisting
          to storage. apiVersion, kind, metadata and known fields inside metadata
          are always preserved. This field is deprecated in favor of setting `x-preserve-unknown-fields`
          to true in `spec.versions[*].schema.openAPIV3Schema`. See https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions/#pruning-versus-preserving-unknown-fields
          for details.
        type: boolean
      scope:
        default: ""
        description: scope indicates whether the defined custom resource is cluster-
          or namespace-scoped. Allowed values are `Cluster` and `Namespaced`.
        type: string
      versions:
        description: 'versions is the list of all API versions of the defined custom
          resource. Version names are used to compute the order in which served versions
          are listed in API discovery. If the version string is "kube-like", it will
          sort above non "kube-like" version strings, which are ordered lexicographically.
          "Kube-like" versions start with a "v", then are followed by a number (the
          major version), then optionally the string "alpha" or "beta" and another
          number (the minor version). These are sorted first by GA > beta > alpha
          (where GA is a version with no suffix such as beta or alpha), and then by
          comparing major version, then minor version. An example sorted list of versions:
          v10, v2, v1, v11beta2, v10beta3, v3beta1, v12alpha1, v11alpha2, foo1, foo10.'
        items:
          $ref: '#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionVersion'
          default: {}
        type: array
    required:
    - group
    - names
    - scope
    - versions
    type: object
  io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionStatus:
    description: CustomResourceDefinitionStatus indicates the state of the CustomResourceDefinition
    properties:
      acceptedNames:
        $ref: '#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionNames'
        default: {}
        description: acceptedNames are the names that are actually being used to serve
          discovery. They may be different than the names in spec.
      conditions:
        description: conditions indicate state for particular aspects of a CustomResourceDefinition
        items:
          $ref: '#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionCondition'
          default: {}
        type: array
        x-kubernetes-list-map-keys:
        - type
        x-kubernetes-list-type: map
      storedVersions:
        description: storedVersions lists all versions of CustomResources that were
          ever persisted. Tracking these versions allows a migration path for stored
          versions in etcd. The field is mutable so a migration controller can finish
          a migration to another version (ensuring no old objects are left in storage),
          and then remove the rest of the versions from this list. Versions may not
          be removed from `spec.versions` while they exist in this list.
        items:
          default: ""
          type: string
        type: array
    type: object
  io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionVersion:
    description: CustomResourceDefinitionVersion describes a version for CRD.
    properties:
      additionalPrinterColumns:
        description: additionalPrinterColumns specifies additional columns returned
          in Table output. See https://kubernetes.io/docs/reference/using-api/api-concepts/#receiving-resources-as-tables
          for details. If no columns are specified, a single column displaying the
          age of the custom resource is used.
        items:
          $ref: '#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceColumnDefinition'
          default: {}
        type: array
      deprecated:
        description: deprecated indicates this version of the custom resource API
          is deprecated. When set to true, API requests to this version receive a
          warning header in the server response. Defaults to false.
        type: boolean
      deprecationWarning:
        description: deprecationWarning overrides the default warning returned to
          API clients. May only be set when `deprecated` is true. The default warning
          indicates this version is deprecated and recommends use of the newest served
          version of equal or greater stability, if one exists.
        type: string
      name:
        default: ""
        description: name is the version name, e.g. “v1”, “v2beta1”, etc. The custom
          resources are served under this version at `/apis/<group>/<version>/...`
          if `served` is true.
        type: string
      schema:
        $ref: '#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceValidation'
        description: schema describes the schema used for validation, pruning, and
          defaulting of this version of the custom resource.
      served:
        default: false
        description: served is a flag enabling/disabling this version from being served
          via REST APIs
        type: boolean
      storage:
        default: false
        description: storage indicates this version should be used when persisting
          custom resources to storage. There must be exactly one version with storage=true.
        type: boolean
      subresources:
        $ref: '#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresources'
        description: subresources specify what subresources this version of the defined
          custom resource have.
    required:
    - name
    - served
    - storage
    type: object
  io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresourceScale:
    description: CustomResourceSubresourceScale defines how to serve the scale subresource
      for CustomResources.
    properties:
      labelSelectorPath:
        description: 'labelSelectorPath defines the JSON path inside of a custom resource
          that corresponds to Scale `status.selector`. Only JSON paths without the
          array notation are allowed. Must be a JSON Path under `.status` or `.spec`.
          Must be set to work with HorizontalPodAutoscaler. The field pointed by this
          JSON path must be a string field (not a complex selector struct) which contains
          a serialized label selector in string form. More info: https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions#scale-subresource
          If there is no value under the given path in the custom resource, the `status.selector`
          value in the `/scale` subresource will default to the empty string.'
        type: string
      specReplicasPath:
        default: ""
        description: specReplicasPath defines the JSON path inside of a custom resource
          that corresponds to Scale `spec.replicas`. Only JSON paths without the array
          notation are allowed. Must be a JSON Path under `.spec`. If there is no
          value under the given path in the custom resource, the `/scale` subresource
          will return an error on GET.
        type: string
      statusReplicasPath:
        default: ""
        description: statusReplicasPath defines the JSON path inside of a custom resource
          that corresponds to Scale `status.replicas`. Only JSON paths without the
          array notation are allowed. Must be a JSON Path under `.status`. If there
          is no value under the given path in the custom resource, the `status.replicas`
          value in the `/scale` subresource will default to 0.
        type: string
    required:
    - specReplicasPath
    - statusReplicasPath
    type: object
  io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresourceStatus:
    description: CustomResourceSubresourceStatus defines how to serve the status subresource
      for CustomResources. Status is represented by the `.status` JSON path inside
      of a CustomResource. When set, * exposes a /status subresource for the custom
      resource * PUT requests to the /status subresource take a custom resource object,
      and ignore changes to anything except the status stanza * PUT/POST/PATCH requests
      to the custom resource ignore changes to the status stanza
    type: object
  io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresources:
    description: CustomResourceSubresources defines the status and scale subresources
      for CustomResources.
    properties:
      scale:
        $ref: '#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresourceScale'
        description: scale indicates the custom resource should serve a `/scale` subresource
          that returns an `autoscaling/v1` Scale object.
      status:
        $ref: '#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresourceStatus'
        description: 'status indicates the custom resource should serve a `/status`
          subresource. When enabled: 1. requests to the custom resource primary endpoint
          ignore changes to the `status` stanza of the object. 2. requests to the
          custom resource `/status` subresource ignore changes to anything other than
          the `status` stanza of the object.'
    type: object
  io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceValidation:
    description: CustomResourceValidation is a list of validation methods for CustomResources.
    properties:
      openAPIV3Schema:
        $ref: '#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps'
        description: openAPIV3Schema is the OpenAPI v3 schema to use for validation
          and pruning.
    type: object
  io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ExternalDocumentation:
    description: ExternalDocumentation allows referencing an external resource for
      extended documentation.
    properties:
      description:
        type: string
      url:
        type: string
    type: object
  io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSON:
    description: 'JSON represents any valid JSON value. These types are supported:
      bool, int64, float64, string, []interface{}, map[string]interface{} and nil.'
  io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps:
    description: JSONSchemaProps is a JSON-Schema following Specification Draft 4
      (http://json-schema.org/).
    properties:
      $ref:
        type: string
      $schema:
        type: string
      additionalItems:
        $ref: '#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrBool'
      additionalProperties:
        $ref: '#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrBool'
      allOf:
        items:
          $ref: '#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps'
          default: {}
        type: array
      anyOf:
        items:
          $ref: '#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps'
          default: {}
        type: array
      default:
        $ref: '#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSON'
        description: default is a default value for undefined object fields. Defaulting
          is a beta feature under the CustomResourceDefaulting feature gate. Defaulting
          requires spec.preserveUnknownFields to be false.
      definitions:
        additionalProperties:
          $ref: '#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps'
          default: {}
        type: object
      dependencies:
        additionalProperties:
          $ref: '#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrStringArray'
          default: {}
        type: object
      description:
        type: string
      enum:
        items:
          $ref: '#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSON'
          default: {}
        type: array
      example:
        $ref: '#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSON'
      exclusiveMaximum:
        type: boolean
      exclusiveMinimum:
        type: boolean
      externalDocs:
        $ref: '#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ExternalDocumentation'
      format:
        description: |-
          format is an OpenAPI v3 format string. Unknown formats are ignored. The following formats are validated:

          - bsonobjectid: a bson object ID, i.e. a 24 characters hex string - uri: an URI as parsed by Golang net/url.ParseRequestURI - email: an email address as parsed by Golang net/mail.ParseAddress - hostname: a valid representation for an Internet host name, as defined by RFC 1034, section 3.1 [RFC1034]. - ipv4: an IPv4 IP as parsed by Golang net.ParseIP - ipv6: an IPv6 IP as parsed by Golang net.ParseIP - cidr: a CIDR as parsed by Golang net.ParseCIDR - mac: a MAC address as parsed by Golang net.ParseMAC - uuid: an UUID that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{12}$ - uuid3: an UUID3 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?3[0-9a-f]{3}-?[0-9a-f]{4}-?[0-9a-f]{12}$ - uuid4: an UUID4 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?4[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$ - uuid5: an UUID5 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?5[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$ - isbn: an ISBN10 or ISBN13 number string like "0321751043" or "978-0321751041" - isbn10: an ISBN10 number string like "0321751043" - isbn13: an ISBN13 number string like "978-0321751041" - creditcard: a credit card number defined by the regex ^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\d{3})\d{11})$ with any non digit characters mixed in - ssn: a U.S. social security number following the regex ^\d{3}[- ]?\d{2}[- ]?\d{4}$ - hexcolor: an hexadecimal color code like "#FFFFFF: following the regex ^#?([0-9a-fA-F]{3}|[0-9a-fA-F]{6})$ - rgbcolor: an RGB color code like rgb like "rgb(255,255,2559" - byte: base64 encoded binary data - password: any kind of string - date: a date string like "2006-01-02" as defined by full-date in RFC3339 - duration: a duration string like "22 ns" as parsed by Golang time.ParseDuration or compatible with Scala duration format - datetime: a date time string like "2014-12-15T19:30:20.000Z" as defined by date-time in RFC3339.
        type: string
      id:
        type: string
      items:
        $ref: '#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrArray'
      maxItems:
        format: int64
        type: integer
      maxLength:
        format: int64
        type: integer
      maxProperties:
        format: int64
        type: integer
      maximum:
        format: double
        type: number
      minItems:
        format: int64
        type: integer
      minLength:
        format: int64
        type: integer
      minProperties:
        format: int64
        type: integer
      minimum:
        format: double
        type: number
      multipleOf:
        format: double
        type: number
      not:
        $ref: '#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps'
      nullable:
        type: boolean
      oneOf:
        items:
          $ref: '#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps'
          default: {}
        type: array
      pattern:
        type: string
      patternProperties:
        additionalProperties:
          $ref: '#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps'
          default: {}
        type: object
      properties:
        additionalProperties:
          $ref: '#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps'
          default: {}
        type: object
      required:
        items:
          default: ""
          type: string
        type: array
      title:
        type: string
      type:
        type: string
      uniqueItems:
        type: boolean
      x-kubernetes-embedded-resource:
        description: x-kubernetes-embedded-resource defines that the value is an embedded
          Kubernetes runtime.Object, with TypeMeta and ObjectMeta. The type must be
          object. It is allowed to further restrict the embedded object. kind, apiVersion
          and metadata are validated automatically. x-kubernetes-preserve-unknown-fields
          is allowed to be true, but does not have to be if the object is fully specified
          (up to kind, apiVersion, metadata).
        type: boolean
      x-kubernetes-int-or-string:
        description: |-
          x-kubernetes-int-or-string specifies that this value is either an integer or a string. If this is true, an empty type is allowed and type as child of anyOf is permitted if following one of the following patterns:

          1) anyOf:
             - type: integer
             - type: string
          2) allOf:
             - anyOf:
               - type: integer
               - type: string
             - ... zero or more
        type: boolean
      x-kubernetes-list-map-keys:
        description: |-
          x-kubernetes-list-map-keys annotates an array with the x-kubernetes-list-type `map` by specifying the keys used as the index of the map.

          This tag MUST only be used on lists that have the "x-kubernetes-list-type" extension set to "map". Also, the values specified for this attribute must be a scalar typed field of the child structure (no nesting is supported).

          The properties specified must either be required or have a default value, to ensure those properties are present for all list items.
        items:
          default: ""
          type: string
        type: array
      x-kubernetes-list-type:
        description: |-
          x-kubernetes-list-type annotates an array to further describe its topology. This extension must only be used on lists and may have 3 possible values:

          1) `atomic`: the list is treated as a single entity, like a scalar.
               Atomic lists will be entirely replaced when updated. This extension
               may be used on any type of list (struct, scalar, ...).
          2) `set`:
               Sets are lists that must not have multiple items with the same value. Each
               value must be a scalar, an object with x-kubernetes-map-type `atomic` or an
               array with x-kubernetes-list-type `atomic`.
          3) `map`:
               These lists are like maps in that their elements have a non-index key
               used to identify them. Order is preserved upon merge. The map tag
               must only be used on a list with elements of type object.
          Defaults to atomic for arrays.
        type: string
      x-kubernetes-map-type:
        description: |-
          x-kubernetes-map-type annotates an object to further describe its topology. This extension must only be used when type is object and may have 2 possible values:

          1) `granular`:
               These maps are actual maps (key-value pairs) and each fields are independent
               from each other (they can each be manipulated by separate actors). This is
               the default behaviour for all maps.
          2) `atomic`: the list is treated as a single entity, like a scalar.
               Atomic maps will be entirely replaced when updated.
        type: string
      x-kubernetes-preserve-unknown-fields:
        description: x-kubernetes-preserve-unknown-fields stops the API server decoding
          step from pruning fields which are not specified in the validation schema.
          This affects fields recursively, but switches back to normal pruning behaviour
          if nested properties or additionalProperties are specified in the schema.
          This can either be true or undefined. False is forbidden.
        type: boolean
      x-kubernetes-validations:
        description: x-kubernetes-validations describes a list of validation rules
          written in the CEL expression language. This field is an alpha-level. Using
          this field requires the feature gate `CustomResourceValidationExpressions`
          to be enabled.
        items:
          $ref: '#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ValidationRule'
          default: {}
        type: array
        x-kubernetes-list-map-keys:
        - rule
        x-kubernetes-list-type: map
        x-kubernetes-patch-merge-key: rule
        x-kubernetes-patch-strategy: merge
    type: object
  io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrArray:
    description: JSONSchemaPropsOrArray represents a value that can either be a JSONSchemaProps
      or an array of JSONSchemaProps. Mainly here for serialization purposes.
  io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrBool:
    description: JSONSchemaPropsOrBool represents JSONSchemaProps or a boolean value.
      Defaults to true for the boolean property.
  io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrStringArray:
    description: JSONSchemaPropsOrStringArray represents a JSONSchemaProps or a string
      array.
  io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ServiceReference:
    description: ServiceReference holds a reference to Service.legacy.k8s.io
    properties:
      name:
        default: ""
        description: name is the name of the service. Required
        type: string
      namespace:
        default: ""
        description: namespace is the namespace of the service. Required
        type: string
      path:
        description: path is an optional URL path at which the webhook will be contacted.
        type: string
      port:
        description: port is an optional service port at which the webhook will be
          contacted. `port` should be a valid port number (1-65535, inclusive). Defaults
          to 443 for backward compatibility.
        format: int32
        type: integer
    required:
    - namespace
    - name
    type: object
  io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ValidationRule:
    description: ValidationRule describes a validation rule written in the CEL expression
      language.
    properties:
      message:
        description: 'Message represents the message displayed when validation fails.
          The message is required if the Rule contains line breaks. The message must
          not contain line breaks. If unset, the message is "failed rule: {Rule}".
          e.g. "must be a URL with the host matching spec.host"'
        type: string
      rule:
        default: ""
        description: "Rule represents the expression which will be evaluated by CEL.
          ref: https://github.com/google/cel-spec The Rule is scoped to the location
          of the x-kubernetes-validations extension in the schema. The `self` variable
          in the CEL expression is bound to the scoped value. Example: - Rule scoped
          to the root of a resource with a status subresource: {\"rule\": \"self.status.actual
          <= self.spec.maxDesired\"}\n\nIf the Rule is scoped to an object with properties,
          the accessible properties of the object are field selectable via `self.field`
          and field presence can be checked via `has(self.field)`. Null valued fields
          are treated as absent fields in CEL expressions. If the Rule is scoped to
          an object with additionalProperties (i.e. a map) the value of the map are
          accessible via `self[mapKey]`, map containment can be checked via `mapKey
          in self` and all entries of the map are accessible via CEL macros and functions
          such as `self.all(...)`. If the Rule is scoped to an array, the elements
          of the array are accessible via `self[i]` and also by macros and functions.
          If the Rule is scoped to a scalar, `self` is bound to the scalar value.
          Examples: - Rule scoped to a map of objects: {\"rule\": \"self.components['Widget'].priority
          < 10\"} - Rule scoped to a list of integers: {\"rule\": \"self.values.all(value,
          value >= 0 && value < 100)\"} - Rule scoped to a string value: {\"rule\":
          \"self.startsWith('kube')\"}\n\nThe `apiVersion`, `kind`, `metadata.name`
          and `metadata.generateName` are always accessible from the root of the object
          and from any x-kubernetes-embedded-resource annotated objects. No other
          metadata properties are accessible.\n\nUnknown data preserved in custom
          resources via x-kubernetes-preserve-unknown-fields is not accessible in
          CEL expressions. This includes: - Unknown field values that are preserved
          by object schemas with x-kubernetes-preserve-unknown-fields. - Object properties
          where the property schema is of an \"unknown type\". An \"unknown type\"
          is recursively defined as:\n  - A schema with no type and x-kubernetes-preserve-unknown-fields
          set to true\n  - An array where the items schema is of an \"unknown type\"\n
          \ - An object where the additionalProperties schema is of an \"unknown type\"\n\nOnly
          property names of the form `[a-zA-Z_.-/][a-zA-Z0-9_.-/]*` are accessible.
          Accessible property names are escaped according to the following rules when
          accessed in the expression: - '__' escapes to '__underscores__' - '.' escapes
          to '__dot__' - '-' escapes to '__dash__' - '/' escapes to '__slash__' -
          Property names that exactly match a CEL RESERVED keyword escape to '__{keyword}__'.
          The keywords are:\n\t  \"true\", \"false\", \"null\", \"in\", \"as\", \"break\",
          \"const\", \"continue\", \"else\", \"for\", \"function\", \"if\",\n\t  \"import\",
          \"let\", \"loop\", \"package\", \"namespace\", \"return\".\nExamples:\n
          \ - Rule accessing a property named \"namespace\": {\"rule\": \"self.__namespace__
          > 0\"}\n  - Rule accessing a property named \"x-prop\": {\"rule\": \"self.x__dash__prop
          > 0\"}\n  - Rule accessing a property named \"redact__d\": {\"rule\": \"self.redact__underscores__d
          > 0\"}\n\nEquality on arrays with x-kubernetes-list-type of 'set' or 'map'
          ignores element order, i.e. [1, 2] == [2, 1]. Concatenation on arrays with
          x-kubernetes-list-type use the semantics of the list type:\n  - 'set': `X
          + Y` performs a union where the array positions of all elements in `X` are
          preserved and\n    non-intersecting elements in `Y` are appended, retaining
          their partial order.\n  - 'map': `X + Y` performs a merge where the array
          positions of all keys in `X` are preserved but the values\n    are overwritten
          by values in `Y` when the key sets of `X` and `Y` intersect. Elements in
          `Y` with\n    non-intersecting keys are appended, retaining their partial
          order."
        type: string
    required:
    - rule
    type: object
  io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.WebhookClientConfig:
    description: WebhookClientConfig contains the information to make a TLS connection
      with the webhook.
    properties:
      caBundle:
        description: caBundle is a PEM encoded CA bundle which will be used to validate
          the webhook's server certificate. If unspecified, system trust roots on
          the apiserver are used.
        format: byte
        type: string
      service:
        $ref: '#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ServiceReference'
        description: |-
          service is a reference to the service for this webhook. Either service or url must be specified.

          If the webhook is running within the cluster, then you should use `service`.
      url:
        description: |-
          url gives the location of the webhook, in standard URL form (`scheme://host:port/path`). Exactly one of `url` or `service` must be specified.

          The `host` should not refer to a service running in the cluster; use the `service` field instead. The host might be resolved via external DNS in some apiservers (e.g., `kube-apiserver` cannot resolve in-cluster DNS as that would be a layering violation). `host` may also be an IP address.

          Please note that using `localhost` or `127.0.0.1` as a `host` is risky unless you take great care to run this webhook on all hosts which run an apiserver which might need to make calls to this webhook. Such installs are likely to be non-portable, i.e., not easy to turn up in a new cluster.

          The scheme must be "https"; the URL must begin with "https://".

          A path is optional, and if present may be any string permissible in a URL. You may use the path to pass an arbitrary string to the webhook, for example, a cluster identifier.

          Attempting to use a user or basic auth e.g. "user:password@" is not allowed. Fragments ("#...") and query parameters ("?...") are not allowed, either.
        type: string
    type: object
  io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.WebhookConversion:
    description: WebhookConversion describes how to call a conversion webhook
    properties:
      clientConfig:
        $ref: '#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.WebhookClientConfig'
        description: clientConfig is the instructions for how to call the webhook
          if strategy is `Webhook`.
      conversionReviewVersions:
        description: conversionReviewVersions is an ordered list of preferred `ConversionReview`
          versions the Webhook expects. The API server will use the first version
          in the list which it supports. If none of the versions specified in this
          list are supported by API server, conversion will fail for the custom resource.
          If a persisted Webhook configuration specifies allowed versions and does
          not include any versions known to the API Server, calls to the webhook will
          fail.
        items:
          default: ""
          type: string
        type: array
    required:
    - conversionReviewVersions
    type: object
  io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1:
    description: |-
      FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.

      Each key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:<name>', where <name> is the name of a field in a struct, or key in a map 'v:<value>', where <value> is the exact json formatted value of a list item 'i:<index>', where <index> is position of a item in a list 'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.

      The exact format is defined in sigs.k8s.io/structured-merge-diff
    type: object
  io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry:
    description: ManagedFieldsEntry is a workflow-id, a FieldSet and the group version
      of the resource that the fieldset applies to.
    properties:
      apiVersion:
        description: APIVersion defines the version of this resource that this field
          set applies to. The format is "group/version" just like the top-level APIVersion
          field. It is necessary to track the version of a field set because it cannot
          be automatically converted.
        type: string
      fieldsType:
        description: 'FieldsType is the discriminator for the different fields format
          and version. There is currently only one possible value: "FieldsV1"'
        type: string
      fieldsV1:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1'
        description: FieldsV1 holds the first JSON version format as described in
          the "FieldsV1" type.
      manager:
        description: Manager is an identifier of the workflow managing these fields.
        type: string
      operation:
        description: Operation is the type of operation which lead to this ManagedFieldsEntry
          being created. The only valid values for this field are 'Apply' and 'Update'.
        type: string
      subresource:
        description: Subresource is the name of the subresource used to update that
          object, or empty string if the object was updated through the main resource.
          The value of this field is used to distinguish between managers, even if
          they share the same name. For example, a status update will be distinct
          from a regular update using the same manager name. Note that the APIVersion
          field is not related to the Subresource field and it always corresponds
          to the version of the main resource.
        type: string
      time:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time'
        description: Time is the timestamp of when the ManagedFields entry was added.
          The timestamp will also be updated if a field is added, the manager changes
          any of the owned fields value or removes a field. The timestamp does not
          update when a field is removed from the entry because another manager took
          it over.
    type: object
  io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta:
    description: ObjectMeta is metadata that all persisted resources must have, which
      includes all objects users must create.
    properties:
      annotations:
        additionalProperties:
          default: ""
          type: string
        description: 'Annotations is an unstructured key value map stored with a resource
          that may be set by external tools to store and retrieve arbitrary metadata.
          They are not queryable and should be preserved when modifying objects. More
          info: http://kubernetes.io/docs/user-guide/annotations'
        type: object
      clusterName:
        description: |-
          Deprecated: ClusterName is a legacy field that was always cleared by the system and never used; it will be removed completely in 1.25.

          The name in the go struct is changed to help clients detect accidental use.
        type: string
      creationTimestamp:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time'
        default: {}
        description: |-
          CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.

          Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
      deletionGracePeriodSeconds:
        description: Number of seconds allowed for this object to gracefully terminate
          before it will be removed from the system. Only set when deletionTimestamp
          is also set. May only be shortened. Read-only.
        format: int64
        type: integer
      deletionTimestamp:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time'
        description: |-
          DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.

          Populated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
      finalizers:
        description: Must be empty before the object is deleted from the registry.
          Each entry is an identifier for the responsible component that will remove
          the entry from the list. If the deletionTimestamp of the object is non-nil,
          entries in this list can only be removed. Finalizers may be processed and
          removed in any order.  Order is NOT enforced because it introduces significant
          risk of stuck finalizers. finalizers is a shared field, any actor with permission
          can reorder it. If the finalizer list is processed in order, then this can
          lead to a situation in which the component responsible for the first finalizer
          in the list is waiting for a signal (field value, external system, or other)
          produced by a component responsible for a finalizer later in the list, resulting
          in a deadlock. Without enforced ordering finalizers are free to order amongst
          themselves and are not vulnerable to ordering changes in the list.
        items:
          default: ""
          type: string
        type: array
        x-kubernetes-patch-strategy: merge
      generateName:
        description: |-
          GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.

          If this field is specified and the generated name exists, the server will return a 409.

          Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency
        type: string
      generation:
        description: A sequence number representing a specific generation of the desired
          state. Populated by the system. Read-only.
        format: int64
        type: integer
      labels:
        additionalProperties:
          default: ""
          type: string
        description: 'Map of string keys and values that can be used to organize and
          categorize (scope and select) objects. May match selectors of replication
          controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
        type: object
      managedFields:
        description: ManagedFields maps workflow-id and version to the set of fields
          that are managed by that workflow. This is mostly for internal housekeeping,
          and users typically shouldn't need to set or understand this field. A workflow
          can be the user's name, a controller's name, or the name of a specific apply
          path like "ci-cd". The set of fields is always in the version that the workflow
          used when modifying the object.
        items:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry'
          default: {}
        type: array
      name:
        description: 'Name must be unique within a namespace. Is required when creating
          resources, although some resources may allow a client to request the generation
          of an appropriate name automatically. Name is primarily intended for creation
          idempotence and configuration definition. Cannot be updated. More info:
          http://kubernetes.io/docs/user-guide/identifiers#names'
        type: string
      namespace:
        description: |-
          Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the "default" namespace, but "default" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.

          Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces
        type: string
      ownerReferences:
        description: List of objects depended by this object. If ALL objects in the
          list have been deleted, this object will be garbage collected. If this object
          is managed by a controller, then an entry in this list will point to this
          controller, with the controller field set to true. There cannot be more
          than one managing controller.
        items:
          $ref: '#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference'
          default: {}
        type: array
        x-kubernetes-patch-merge-key: uid
        x-kubernetes-patch-strategy: merge
      resourceVersion:
        description: |-
          An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.

          Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
        type: string
      selfLink:
        description: 'Deprecated: selfLink is a legacy read-only field that is no
          longer populated by the system.'
        type: string
      uid:
        description: |-
          UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.

          Populated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids
        type: string
    type: object
  io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference:
    description: OwnerReference contains enough information to let you identify an
      owning object. An owning object must be in the same namespace as the dependent,
      or be cluster-scoped, so there is no namespace field.
    properties:
      apiVersion:
        default: ""
        description: API version of the referent.
        type: string
      blockOwnerDeletion:
        description: If true, AND if the owner has the "foregroundDeletion" finalizer,
          then the owner cannot be deleted from the key-value store until this reference
          is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion
          for how the garbage collector interacts with this field and enforces the
          foreground deletion. Defaults to false. To set this field, a user needs
          "delete" permission of the owner, otherwise 422 (Unprocessable Entity) will
          be returned.
        type: boolean
      controller:
        description: If true, this reference points to the managing controller.
        type: boolean
      kind:
        default: ""
        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        type: string
      name:
        default: ""
        description: 'Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
        type: string
      uid:
        default: ""
        description: 'UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
        type: string
    required:
    - apiVersion
    - kind
    - name
    - uid
    type: object
    x-kubernetes-map-type: atomic
  io.k8s.apimachinery.pkg.apis.meta.v1.Time:
    description: Time is a wrapper around time.Time which supports correct marshaling
      to YAML and JSON.  Wrappers are provided for many of the factory methods that
      the time package offers.
    format: date-time
    type: string
info:
  title: Kubemate
  version: unversioned
paths: {}
swagger: "2.0"
